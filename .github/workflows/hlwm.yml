name: HLWM CI

# on: [push, pull_request]
on:
  push:
    paths-ignore:
    - '.mergify.yml'
    - 'share/**'

jobs:
  build-test-current:
    # Name the Job
    name: Build and test on current ubuntu
    # Set the type of machine to run on
    runs-on: ubuntu-latest
    container: hlwm/ci:focal

    steps:
      # Checks out a copy of your repository on the ubuntu-latest machine
      - name: Checkout code
        uses: actions/checkout@v2

      - uses: actions/cache@v1
        name: Cache ~/.ccache
        with:
          path: ~/.ccache
          key: focal-ccache

      - uses: actions/cache@v1
        name: Cache .tox-cache
        with:
          path: .tox-cache
          key: focal-tox

      - name: Build
        run: |
          ci/build.py --build-dir=build --cmake --cxx=g++-9 --cc=gcc-9 --build-type=Debug --ccache=$HOME/.ccache --compile

      - name: Test
        run: |
          ci/build.py --build-dir=build --run-tests

      - name: Codecov report
        continue-on-error: true
        run: |
          wget -O codecov-io.bash https://codecov.io/bash
          bash codecov-io.bash -f coverage.info

  build-clang:
    name: Build with Clang, run linters and static analyzers
    runs-on: ubuntu-latest
    container: hlwm/ci:focal
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - uses: actions/cache@v1
        name: Cache ~/.ccache
        with:
          path: ~/.ccache
          key: focal-clang-ccache # different name than in build-test-current

      - uses: actions/cache@v1
        name: Cache .tox-cache
        with:
          path: .tox-cache
          key: focal-tox # same name as in build-test-current

      - name: Check usage of std-prefix
        run: |
          ci/build.py --build-dir=build --check-using-std

      - name: Check python using flake8
        run: |
          ci/build.py --build-dir=build --flake8

      - name: Build
        run: |
          ci/build.py --build-dir=build --cmake --cxx=$PWD/ci/clang++-and-tidy.sh --cc=$PWD/ci/clang-and-tidy.sh --build-type=Debug --ccache=$HOME/.ccache --compile

      - name: Check includes using iwyu
        run: |
          ci/build.py --build-dir=build --iwyu

  build-old-32bit:
    name: Build for 32bit with ancient GCC on Ubuntu 14.04
    runs-on: ubuntu-latest
    container: hlwm/ci:trusty
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - uses: actions/cache@v1
        name: Cache ~/.ccache
        with:
          path: ~/.ccache
          key: ccache-gcc-4.8 # different name than in build-test-current

      - name: Build
        env:
          CC: gcc-4.8
          CXX: g++-4.8
          CXXFLAGS: -m32
          CFLAGS: -m32
        run: |
          ccache -z --max-size=500M
          mkdir build
          cd build
          cmake -GNinja -DWITH_DOCUMENTATION=NO -DENABLE_CCACHE=YES ..
          ninja -v -k10
          ccache -s
